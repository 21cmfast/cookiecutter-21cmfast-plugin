version: '{branch}-{build}'
build: off
cache:
  - '%LOCALAPPDATA%\pip\Cache'
environment:
  global:
    WITH_COMPILER: 'cmd /E:ON /V:ON /C .\ci\appveyor-with-compiler.cmd'
  matrix:
    - TOXENV: check
      PYTHON_HOME: C:\Python27
      PYTHON_VERSION: '2.7'
      PYTHON_ARCH: '32'
{% for env in ['2.7', '3.4', '3.5'] %}{% for arch in ['32', '64'] %}
    - TOXENV: '{{ env }}-cover{% if cookiecutter.codecov|lower == 'yes' %},codecov{% endif %}'
      TOXPYTHON: C:\Python{{ env.replace('.', '') }}{{ '-x64' if arch == '64' else '' }}\python.exe
      {% if arch == '64' -%}
      WINDOWS_SDK_VERSION: v7.{{ '1' if env[0] == '3' else '0' }}
      {% endif -%}
      PYTHON_HOME: C:\Python{{ env.replace('.', '') }}{{ '-x64' if arch == '64' else '' }}
      PYTHON_VERSION: '{{ env }}'
      PYTHON_ARCH: '{{ arch }}'
    - TOXENV: '{{ env }}-nocov'
      TOXPYTHON: C:\Python{{ env.replace('.', '') }}{{ '-x64' if arch == '64' else '' }}\python.exe
      {% if arch == '64' -%}
      WINDOWS_SDK_VERSION: v7.{{ '1' if env[0] == '3' else '0' }}
      {% endif -%}
      PYTHON_HOME: C:\Python{{ env.replace('.', '') }}{{ '-x64' if arch == '64' else '' }}
      PYTHON_VERSION: '{{ env }}'
      PYTHON_ARCH: '{{ arch }}'
{% endfor %}{% endfor %}
init:
  - ps: echo $env:TOXENV
  - ps: ls C:\Python*
install:
  - python -u ci\appveyor-bootstrap.py
  - '%PYTHON_HOME%\Scripts\virtualenv --version'
  - '%PYTHON_HOME%\Scripts\easy_install --version'
  - '%PYTHON_HOME%\Scripts\pip --version'
  - '%PYTHON_HOME%\Scripts\tox --version'
test_script:
  - '%WITH_COMPILER% %PYTHON_HOME%\Scripts\tox'
{% if cookiecutter.c_extension_support|lower == 'yes' %}
after_test:
  - IF "%TOXENV:~-8,8%" == "-nocov" %WITH_COMPILER% %TOXPYTHON% setup.py bdist_wheel
{% endif %}
on_failure:
  - ps: dir "env:"
  - ps: get-content .tox\*\log\*
artifacts:
  - path: dist\*
### To enable remote debugging uncomment this:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
